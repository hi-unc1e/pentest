#!/usr/bin/env python
# -*- encoding: utf-8 -*-
"""
监控指定目录下的文件，并删除符合条件的文件。

"""
import time
import os
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler


def should_be_deleted(path: str):
    return False


class Watcher:
    DIRECTORY_TO_WATCH = "/tmp/"  # 指定要监控的目录

    def __init__(self):
        self.observer = Observer()

    def run(self):
        event_handler = Handler()
        self.observer.schedule(event_handler, self.DIRECTORY_TO_WATCH, recursive=True)
        self.observer.start()
        try:
            while True:
                time.sleep(0.1)
        except:
            self.observer.stop()
            print("Observer Stopped")

        self.observer.join()


class Handler(FileSystemEventHandler):

    @staticmethod
    def on_any_event(event):
        if event.is_directory:
            return None

        elif event.event_type == 'created':
            # 检测到新文件创建
            print(f"Received created event - {event.src_path}.")
            # 如果文件名符合删除条件，则删除该文件
            if should_be_deleted(event.src_path):  # 替换为您要删除的特定文件名
                os.remove(event.src_path)
                print(f"Deleted file - {event.src_path}.")


if __name__ == '__main__':
    w = Watcher()
    w.run()
