#!/usr/bin/env python
# -*- encoding: utf-8 -*-
'''
@File    :   selenium_reverse_proxy.py.py
@Contact :   lihanwei@zhiqiansec.com
@DateTime :  2023/6/10 23:51

selenium的反向代理，适用于
- webvpn
- 绕过js参数加密（需修改）


免责声明：
- 本项目仅供学习交流使用，严禁将其用于任何恶意目的。使用本项目所造成的一切后果，由使用者自行承担，与本项目开发者无关。
- 使用本项目时，请遵守法律法规，尊重他人隐私和知识产权，不得从事侵犯他人合法权益的行为。本项目开发者不承担任何因使用本项目而导致的法律责任。
- 本项目中所使用的第三方库（例如 Flask 和 Selenium）均具有其自己的开源许可证和使用限制，请使用者在使用时遵守相关规定。
- 如果您对本项目有任何疑问或建议，欢迎通过 GitHub 上的 Issue 或者联系开发者的方式与我们联系。
'''
import re
from flask import Flask, request, Response, redirect
from selenium import webdriver
from selenium.webdriver.chrome.options import Options

app = Flask(__name__)

def create_driver():
    # 配置 Chrome 浏览器
    chrome_options = Options()
    chrome_options.add_argument('--disable-gpu')  # 禁用 GPU 加速
    chrome_options.add_argument('--user-data-dir=./selenium_data_dir')  # 指定用户数据目录

    # 启动 Chrome 浏览器
    driver = webdriver.Chrome(chrome_options=chrome_options)
    return driver

# 创建一个全局的浏览器实例
global_driver = create_driver()

def modify_html_links(html, base_url):
    # 使用正则表达式替换 HTML 中的链接
    modified_html = re.sub(r'(<\s*a[^>]*href\s*=\s*["\'])([^"\'#]+)(["\'][^>]*>)',
                           r'\1?url=' + base_url + r'\2\3', html)
    modified_html = re.sub(r'(<\s*form[^>]*action\s*=\s*["\'])([^"\'#]+)(["\'][^>]*>)',
                           r'\1?url=' + base_url + r'\2\3', modified_html)
    return modified_html

@app.route('/')
def reverse_proxy():
    # 获取请求的 URL 参数
    url = request.args.get('url')

    # 使用全局浏览器实例访问目标 URL
    global_driver.get(url)

    # 检查 302 跳转
    if global_driver.current_url != url:
        return redirect(f"/?url={global_driver.current_url}", code=302)

    # 获取网页源代码
    html = global_driver.page_source

    # 修改 HTML 中的链接以实现完整的反向代理
    base_url = request.url_root[:-1]  # 去掉末尾的斜杠
    modified_html = modify_html_links(html, base_url)

    # 将修改后的网页源代码作为响应返回
    return Response(modified_html, content_type='text/html;charset=UTF-8')

def shutdown_driver():
    global_driver.quit()

# 关闭浏览器实例
app.add_url_rule('/shutdown_driver', 'shutdown_driver', shutdown_driver, methods=['POST'])

# 启动 Flask 服务器
if __name__ == '__main__':
    app.run(host='127.0.0.1', port=5000)